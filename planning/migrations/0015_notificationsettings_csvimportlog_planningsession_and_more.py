# Generated by Django 5.2.4 on 2025-08-22 20:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('planning', '0014_timeslot_default_selected'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('planning_ready', 'Planning klaar'), ('planning_not_sent', 'Planning niet naar chauffeurs gestuurd'), ('daily_reminder', 'Dagelijkse herinnering'), ('weekly_reminder', 'Wekelijkse herinnering')], help_text='Type notificatie', max_length=20)),
                ('enabled', models.BooleanField(default=True, help_text='Of deze notificatie actief is')),
                ('email_recipients', models.TextField(help_text="Email adressen (gescheiden door komma's)")),
                ('days_ahead', models.IntegerField(default=1, help_text='Aantal dagen vooruit voor notificatie')),
                ('time_of_day', models.TimeField(default='09:00', help_text='Tijdstip voor notificatie')),
                ('last_sent', models.DateTimeField(blank=True, help_text='Laatste keer verzonden', null=True)),
            ],
            options={
                'verbose_name': 'Notificatie Instelling',
                'verbose_name_plural': 'Notificatie Instellingen',
            },
        ),
        migrations.CreateModel(
            name='CSVImportLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(help_text='Naam van het geïmporteerde bestand', max_length=255)),
                ('import_date', models.DateTimeField(auto_now_add=True, help_text='Datum en tijd van import')),
                ('status', models.CharField(choices=[('success', 'Succesvol'), ('partial', 'Gedeeltelijk succesvol'), ('failed', 'Mislukt')], help_text='Status van de import', max_length=20)),
                ('total_patients', models.IntegerField(default=0, help_text='Totaal aantal patiënten in CSV')),
                ('imported_patients', models.IntegerField(default=0, help_text='Aantal succesvol geïmporteerde patiënten')),
                ('errors', models.TextField(blank=True, help_text='Fouten tijdens import')),
                ('csv_content', models.TextField(help_text='Inhoud van het CSV bestand (voor audit)')),
                ('imported_by', models.ForeignKey(help_text='Gebruiker die de import heeft uitgevoerd', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CSV Import Log',
                'verbose_name_plural': 'CSV Import Logs',
                'ordering': ['-import_date'],
            },
        ),
        migrations.CreateModel(
            name='PlanningSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Naam van de planning sessie', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Aanmaakdatum')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Laatste wijziging')),
                ('status', models.CharField(choices=[('concept', 'Concept'), ('reviewed', 'Gereviewd'), ('approved', 'Goedgekeurd'), ('published', 'Gepubliceerd naar chauffeurs'), ('archived', 'Gearchiveerd')], default='concept', help_text='Status van de planning', max_length=20)),
                ('planning_date', models.DateField(help_text='Datum waarvoor de planning geldt')),
                ('description', models.TextField(blank=True, help_text='Beschrijving van de planning')),
                ('routes_data', models.JSONField(default=dict, help_text='Route data in JSON formaat')),
                ('total_routes', models.IntegerField(default=0, help_text='Totaal aantal routes')),
                ('total_patients', models.IntegerField(default=0, help_text='Totaal aantal patiënten')),
                ('total_distance', models.DecimalField(decimal_places=2, default=0, help_text='Totale afstand in km', max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, help_text='Totale kosten', max_digits=10)),
                ('total_time', models.IntegerField(default=0, help_text='Totale tijd in minuten')),
                ('created_by', models.ForeignKey(help_text='Planner die de sessie heeft aangemaakt', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('selected_timeslots', models.ManyToManyField(help_text='Geselecteerde tijdblokken', to='planning.timeslot')),
                ('selected_vehicles', models.ManyToManyField(help_text='Geselecteerde voertuigen', to='planning.vehicle')),
            ],
            options={
                'verbose_name': 'Planning Sessie',
                'verbose_name_plural': 'Planning Sessies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlanningAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('create', 'Planning aangemaakt'), ('edit', 'Planning bewerkt'), ('patient_add', 'Patiënt toegevoegd'), ('patient_remove', 'Patiënt verwijderd'), ('patient_move', 'Patiënt verplaatst'), ('vehicle_change', 'Voertuig gewijzigd'), ('order_change', 'Volgorde gewijzigd'), ('timeslot_change', 'Tijdblok gewijzigd'), ('approve', 'Planning goedgekeurd'), ('publish', 'Planning gepubliceerd'), ('revert', 'Wijziging teruggedraaid')], help_text='Type actie', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Tijdstip van de actie')),
                ('description', models.TextField(help_text='Beschrijving van de actie')),
                ('details', models.JSONField(default=dict, help_text='Details van de wijziging')),
                ('user', models.ForeignKey(help_text='Gebruiker die de actie heeft uitgevoerd', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('planning_session', models.ForeignKey(help_text='Planning sessie', on_delete=django.db.models.deletion.CASCADE, to='planning.planningsession')),
            ],
            options={
                'verbose_name': 'Planning Actie',
                'verbose_name_plural': 'Planning Acties',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MobileAppNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(help_text='Type notificatie', max_length=50)),
                ('message', models.TextField(help_text='Bericht voor de chauffeur')),
                ('status', models.CharField(choices=[('pending', 'Wachtend'), ('sent', 'Verzonden'), ('delivered', 'Afgeleverd'), ('failed', 'Mislukt')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, help_text='Tijdstip verzonden', null=True)),
                ('delivered_at', models.DateTimeField(blank=True, help_text='Tijdstip afgeleverd', null=True)),
                ('driver', models.ForeignKey(blank=True, help_text='Chauffeur', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(help_text='Voertuig', on_delete=django.db.models.deletion.CASCADE, to='planning.vehicle')),
                ('planning_session', models.ForeignKey(help_text='Planning sessie', on_delete=django.db.models.deletion.CASCADE, to='planning.planningsession')),
            ],
            options={
                'verbose_name': 'Mobile App Notificatie',
                'verbose_name_plural': 'Mobile App Notificaties',
                'ordering': ['-sent_at'],
            },
        ),
    ]
